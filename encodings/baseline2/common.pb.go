// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package baseline2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ValueType is the enumeration of possible types that a value can have.
type ValueType int32

const (
	// String is in `AnyValue.string_value`. Strings are the most common value types and
	// we using 0 value for enum results in omission of the type from the wire (and hence
	// more compact representation).
	ValueType_STRING ValueType = 0
	// 64-bit int is in `AnyValue.int_value`.
	ValueType_INT ValueType = 1
	// Boolean field is in `AnyValue.bool_value`.
	ValueType_BOOL ValueType = 2
	// 64-bit float.
	ValueType_DOUBLE ValueType = 3
	// Array of values is in `ExoticValue.array_values` field.
	ValueType_ARRAY ValueType = 4
	// Key-value list is in `ExoticValue.kvlist_values` field.
	ValueType_KVLIST ValueType = 5
	// Spec requires that "null values within arrays MUST be preserved as-is". Use this
	// type to represent null values. All other fields in AnyValue are not set.
	ValueType_NULL ValueType = 6
)

var ValueType_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "BOOL",
	3: "DOUBLE",
	4: "ARRAY",
	5: "KVLIST",
	6: "NULL",
}

var ValueType_value = map[string]int32{
	"STRING": 0,
	"INT":    1,
	"BOOL":   2,
	"DOUBLE": 3,
	"ARRAY":  4,
	"KVLIST": 5,
	"NULL":   6,
}

func (x ValueType) String() string {
	return proto.EnumName(ValueType_name, int32(x))
}

func (ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

// Resource information.
type Resource struct {
	// Set of labels that describe the resource.
	Attributes []*AttributeKeyValue `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// dropped_attributes_count is the number of dropped attributes. If the value is 0, then
	// no attributes were dropped.
	DroppedAttributesCount uint32   `protobuf:"varint,2,opt,name=dropped_attributes_count,json=droppedAttributesCount,proto3" json:"dropped_attributes_count,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetAttributes() []*AttributeKeyValue {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Resource) GetDroppedAttributesCount() uint32 {
	if m != nil {
		return m.DroppedAttributesCount
	}
	return 0
}

// AnyValue is used to represent any type of attribute value. AnyValue may contain a
// primitive value such as a string or integer or it may contain an arbitrary nested
// object containing arrays, key-value lists and and primitives. AnyValue can represent
// any data that JSON can represent.
type AnyValue struct {
	// type of the value.
	Type ValueType `protobuf:"varint,1,opt,name=type,proto3,enum=baseline2.ValueType" json:"type,omitempty"`
	// This is used when type=BOOL.
	// (Performance note: keep `bool_value` immediately after `type` for more compact
	// representation due to struct field alignment rules in Go).
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	// This is used when type=STRING.
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	// This is used when type=INT.
	IntValue int64 `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3" json:"int_value,omitempty"`
	// This field is set only if `type` is DOUBLE, ARRAY or KVLIST.
	ExoticValue          *ExoticValue `protobuf:"bytes,5,opt,name=exotic_value,json=exoticValue,proto3" json:"exotic_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AnyValue) Reset()         { *m = AnyValue{} }
func (m *AnyValue) String() string { return proto.CompactTextString(m) }
func (*AnyValue) ProtoMessage()    {}
func (*AnyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *AnyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnyValue.Unmarshal(m, b)
}
func (m *AnyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnyValue.Marshal(b, m, deterministic)
}
func (m *AnyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnyValue.Merge(m, src)
}
func (m *AnyValue) XXX_Size() int {
	return xxx_messageInfo_AnyValue.Size(m)
}
func (m *AnyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AnyValue.DiscardUnknown(m)
}

var xxx_messageInfo_AnyValue proto.InternalMessageInfo

func (m *AnyValue) GetType() ValueType {
	if m != nil {
		return m.Type
	}
	return ValueType_STRING
}

func (m *AnyValue) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

func (m *AnyValue) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *AnyValue) GetIntValue() int64 {
	if m != nil {
		return m.IntValue
	}
	return 0
}

func (m *AnyValue) GetExoticValue() *ExoticValue {
	if m != nil {
		return m.ExoticValue
	}
	return nil
}

// ExoticValue is used to represent rarely used value types.
type ExoticValue struct {
	// This is used when type=DOUBLE.
	DoubleValue float64 `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	// This is used when type=ARRAY. The array may be empty (contain 0 elements).
	ArrayValues []*AnyValue `protobuf:"bytes,2,rep,name=array_values,json=arrayValues,proto3" json:"array_values,omitempty"`
	// This is used when type=KVLIST. The list may be empty (contain 0 elements).
	KvlistValues         []*AttributeKeyValue `protobuf:"bytes,3,rep,name=kvlist_values,json=kvlistValues,proto3" json:"kvlist_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ExoticValue) Reset()         { *m = ExoticValue{} }
func (m *ExoticValue) String() string { return proto.CompactTextString(m) }
func (*ExoticValue) ProtoMessage()    {}
func (*ExoticValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *ExoticValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExoticValue.Unmarshal(m, b)
}
func (m *ExoticValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExoticValue.Marshal(b, m, deterministic)
}
func (m *ExoticValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExoticValue.Merge(m, src)
}
func (m *ExoticValue) XXX_Size() int {
	return xxx_messageInfo_ExoticValue.Size(m)
}
func (m *ExoticValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ExoticValue.DiscardUnknown(m)
}

var xxx_messageInfo_ExoticValue proto.InternalMessageInfo

func (m *ExoticValue) GetDoubleValue() float64 {
	if m != nil {
		return m.DoubleValue
	}
	return 0
}

func (m *ExoticValue) GetArrayValues() []*AnyValue {
	if m != nil {
		return m.ArrayValues
	}
	return nil
}

func (m *ExoticValue) GetKvlistValues() []*AttributeKeyValue {
	if m != nil {
		return m.KvlistValues
	}
	return nil
}

// AttributeKeyValue is a key-value pair that is used to store Span attributes, Link
// attributes, etc.
type AttributeKeyValue struct {
	Key                  string    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *AnyValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AttributeKeyValue) Reset()         { *m = AttributeKeyValue{} }
func (m *AttributeKeyValue) String() string { return proto.CompactTextString(m) }
func (*AttributeKeyValue) ProtoMessage()    {}
func (*AttributeKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *AttributeKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeKeyValue.Unmarshal(m, b)
}
func (m *AttributeKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeKeyValue.Marshal(b, m, deterministic)
}
func (m *AttributeKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeKeyValue.Merge(m, src)
}
func (m *AttributeKeyValue) XXX_Size() int {
	return xxx_messageInfo_AttributeKeyValue.Size(m)
}
func (m *AttributeKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeKeyValue proto.InternalMessageInfo

func (m *AttributeKeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AttributeKeyValue) GetValue() *AnyValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// StringKeyValue is a pair of key/value strings. This is the simpler (and faster) version
// of AttributeKeyValue that only supports string values.
type StringKeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringKeyValue) Reset()         { *m = StringKeyValue{} }
func (m *StringKeyValue) String() string { return proto.CompactTextString(m) }
func (*StringKeyValue) ProtoMessage()    {}
func (*StringKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *StringKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringKeyValue.Unmarshal(m, b)
}
func (m *StringKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringKeyValue.Marshal(b, m, deterministic)
}
func (m *StringKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringKeyValue.Merge(m, src)
}
func (m *StringKeyValue) XXX_Size() int {
	return xxx_messageInfo_StringKeyValue.Size(m)
}
func (m *StringKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StringKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_StringKeyValue proto.InternalMessageInfo

func (m *StringKeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringKeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// InstrumentationLibrary is a message representing the instrumentation library information
// such as the fully qualified name and version.
type InstrumentationLibrary struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstrumentationLibrary) Reset()         { *m = InstrumentationLibrary{} }
func (m *InstrumentationLibrary) String() string { return proto.CompactTextString(m) }
func (*InstrumentationLibrary) ProtoMessage()    {}
func (*InstrumentationLibrary) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *InstrumentationLibrary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstrumentationLibrary.Unmarshal(m, b)
}
func (m *InstrumentationLibrary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstrumentationLibrary.Marshal(b, m, deterministic)
}
func (m *InstrumentationLibrary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstrumentationLibrary.Merge(m, src)
}
func (m *InstrumentationLibrary) XXX_Size() int {
	return xxx_messageInfo_InstrumentationLibrary.Size(m)
}
func (m *InstrumentationLibrary) XXX_DiscardUnknown() {
	xxx_messageInfo_InstrumentationLibrary.DiscardUnknown(m)
}

var xxx_messageInfo_InstrumentationLibrary proto.InternalMessageInfo

func (m *InstrumentationLibrary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstrumentationLibrary) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterEnum("baseline2.ValueType", ValueType_name, ValueType_value)
	proto.RegisterType((*Resource)(nil), "baseline2.Resource")
	proto.RegisterType((*AnyValue)(nil), "baseline2.AnyValue")
	proto.RegisterType((*ExoticValue)(nil), "baseline2.ExoticValue")
	proto.RegisterType((*AttributeKeyValue)(nil), "baseline2.AttributeKeyValue")
	proto.RegisterType((*StringKeyValue)(nil), "baseline2.StringKeyValue")
	proto.RegisterType((*InstrumentationLibrary)(nil), "baseline2.InstrumentationLibrary")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x9d, 0xa6, 0xdd, 0x6d, 0x4e, 0xba, 0x4b, 0x1c, 0x97, 0x25, 0xe2, 0x0a, 0xb1, 0x57,
	0xd1, 0x8b, 0xc0, 0x56, 0x90, 0x15, 0xbc, 0x69, 0xd7, 0x55, 0xcb, 0x86, 0x6d, 0x99, 0x76, 0x2b,
	0x5e, 0x95, 0x24, 0x1d, 0x24, 0x6c, 0x3b, 0x13, 0x66, 0x26, 0xc5, 0xdc, 0xfa, 0x3a, 0xbe, 0x8b,
	0x0f, 0xe2, 0x53, 0x48, 0x66, 0xd2, 0x36, 0x20, 0x8a, 0x77, 0x67, 0xfe, 0xff, 0x3b, 0xff, 0x9c,
	0x9c, 0x24, 0xd0, 0x4b, 0xf9, 0x66, 0xc3, 0x59, 0x98, 0x0b, 0xae, 0x38, 0xb6, 0x93, 0x58, 0xd2,
	0x75, 0xc6, 0xe8, 0xa0, 0xff, 0x1d, 0x41, 0x97, 0x50, 0xc9, 0x0b, 0x91, 0x52, 0xfc, 0x0e, 0x20,
	0x56, 0x4a, 0x64, 0x49, 0xa1, 0xa8, 0xf4, 0x90, 0x6f, 0x05, 0xce, 0xe0, 0x22, 0xdc, 0xc3, 0xe1,
	0x70, 0x67, 0xde, 0xd2, 0x72, 0x11, 0xaf, 0x0b, 0x4a, 0x1a, 0x3c, 0xbe, 0x02, 0x6f, 0x25, 0x78,
	0x9e, 0xd3, 0xd5, 0xf2, 0xa0, 0x2e, 0x53, 0x5e, 0x30, 0xe5, 0xb5, 0x7c, 0x14, 0x9c, 0x90, 0xf3,
	0xda, 0xdf, 0xe7, 0xc8, 0xeb, 0xca, 0xed, 0xff, 0x44, 0xd0, 0x1d, 0x32, 0x13, 0x89, 0x03, 0x68,
	0xab, 0x32, 0xa7, 0x1e, 0xf2, 0x51, 0x70, 0x3a, 0x38, 0x6b, 0x5c, 0xaf, 0xfd, 0x79, 0x99, 0x53,
	0xa2, 0x09, 0xfc, 0x1c, 0x20, 0xe1, 0x7c, 0xbd, 0xdc, 0x56, 0xba, 0xbe, 0xa2, 0x4b, 0xec, 0x4a,
	0x31, 0x41, 0x2f, 0xa0, 0x27, 0x95, 0xc8, 0xd8, 0xd7, 0x1a, 0xb0, 0x7c, 0x14, 0xd8, 0xc4, 0x31,
	0x9a, 0x41, 0x9e, 0x81, 0x9d, 0x31, 0x55, 0xfb, 0x6d, 0x1f, 0x05, 0x16, 0xe9, 0x66, 0x4c, 0x19,
	0xf3, 0x2d, 0xf4, 0xe8, 0x37, 0xae, 0xb2, 0xb4, 0xf6, 0x3b, 0x3e, 0x0a, 0x9c, 0xc1, 0x79, 0x63,
	0xa0, 0x1b, 0x6d, 0x9b, 0x4d, 0x38, 0xf4, 0x70, 0xe8, 0xff, 0x40, 0xe0, 0x34, 0xcc, 0x6a, 0x94,
	0x15, 0x2f, 0x92, 0x35, 0xad, 0xa3, 0xaa, 0x67, 0x43, 0xc4, 0x31, 0x9a, 0x41, 0xde, 0x40, 0x2f,
	0x16, 0x22, 0x2e, 0x0d, 0x21, 0xbd, 0x96, 0xde, 0xfe, 0x93, 0xe6, 0xf6, 0xeb, 0x0d, 0x11, 0x47,
	0x83, 0xba, 0x96, 0x78, 0x08, 0x27, 0x0f, 0xdb, 0x75, 0x26, 0xd5, 0xae, 0xd1, 0xfa, 0x8f, 0xd7,
	0xd6, 0x33, 0x2d, 0x26, 0xa2, 0x3f, 0x85, 0xc7, 0x7f, 0x20, 0xd8, 0x05, 0xeb, 0x81, 0x96, 0x7a,
	0x52, 0x9b, 0x54, 0x25, 0x7e, 0x09, 0x9d, 0xc3, 0xa6, 0xff, 0x32, 0x9a, 0x21, 0xfa, 0x57, 0x70,
	0x3a, 0xd3, 0x6b, 0xfe, 0x47, 0xdc, 0x59, 0x33, 0xce, 0xde, 0x75, 0x7e, 0x80, 0xf3, 0x31, 0x93,
	0x4a, 0x14, 0x1b, 0xca, 0x54, 0xac, 0x32, 0xce, 0xa2, 0x2c, 0x11, 0xb1, 0x28, 0x31, 0x86, 0x36,
	0x8b, 0x37, 0xb4, 0x8e, 0xd0, 0x35, 0xf6, 0xe0, 0x78, 0x4b, 0x85, 0xcc, 0x38, 0xab, 0x53, 0x76,
	0xc7, 0x57, 0x9f, 0xc1, 0xde, 0x7f, 0x2e, 0x18, 0xe0, 0x68, 0x36, 0x27, 0xe3, 0xbb, 0x8f, 0xee,
	0x23, 0x7c, 0x0c, 0xd6, 0xf8, 0x6e, 0xee, 0x22, 0xdc, 0x85, 0xf6, 0x68, 0x32, 0x89, 0xdc, 0x56,
	0x65, 0xbf, 0x9f, 0xdc, 0x8f, 0xa2, 0x1b, 0xd7, 0xc2, 0x36, 0x74, 0x86, 0x84, 0x0c, 0xbf, 0xb8,
	0xed, 0x4a, 0xbe, 0x5d, 0x44, 0xe3, 0xd9, 0xdc, 0xed, 0x54, 0xf0, 0xdd, 0x7d, 0x14, 0xb9, 0x47,
	0xa3, 0x4f, 0x70, 0x91, 0xf1, 0x90, 0xe7, 0x94, 0xa5, 0x94, 0xc9, 0x42, 0x9a, 0x5f, 0x2a, 0x54,
	0x22, 0x4e, 0x69, 0xb8, 0xbd, 0x1c, 0xc1, 0xbc, 0xaa, 0xa6, 0x95, 0x38, 0x45, 0xbf, 0x5a, 0x4f,
	0x27, 0x39, 0x65, 0xd7, 0x86, 0xd4, 0x62, 0xa8, 0xfd, 0x70, 0x71, 0x99, 0x1c, 0xe9, 0xce, 0xd7,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x21, 0x95, 0x92, 0x9c, 0x03, 0x00, 0x00,
}
