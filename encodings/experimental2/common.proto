syntax = "proto3";

package experimental2;

option java_multiple_files = true;
option java_package = "io.opencensus.proto.trace.v1";
option java_outer_classname = "TraceProto";

option ruby_package = "OpenCensus.Proto.Trace.V1";

// Resource information.
message Resource {
    // Set of labels that describe the resource.
    repeated AttributeKeyValue attributes = 1;

    // dropped_attributes_count is the number of dropped attributes. If the value is 0, then
    // no attributes were dropped.
    uint32 dropped_attributes_count = 2;
}

// AnyValue is used to represent any type of attribute value. AnyValue may contain a
// primitive value such as a string or integer or it may contain an arbitrary nested
// object containing arrays, key-value lists and primitives. AnyValue can represent
// any data that JSON can represent.
message AnyValue {
    // The value is one of the listed fields. It is valid for all values to be unspecified
    // in which case this AnyValue is considered to be "null".
    oneof value {
        string string_value = 1;
        bool bool_value = 2;
        int64 int_value = 3;
        double double_value = 4;
        ArrayValue array_values = 5;
        AttributeKeyValueList kvlist_values = 6;
    }
}

message ArrayValue {
    // Array of values. The array may be empty (contain 0 elements).
    repeated AnyValue array_values = 1;
}

message AttributeKeyValueList {
    // List of key-value pairs. The list may be empty (contain 0 elements).
    repeated AttributeKeyValue kvlist_values = 1;
}

// AttributeKeyValue is a key-value pair that is used to store Span attributes, Link
// attributes, etc.
message AttributeKeyValue {
    string key = 1;
    AnyValue value = 2;
}

// StringKeyValue is a pair of key/value strings. This is the simpler (and faster) version
// of AttributeKeyValue that only supports string values.
message StringKeyValue {
    string key = 1;
    string value = 2;
}

// InstrumentationLibrary is a message representing the instrumentation library information
// such as the fully qualified name and version.
message InstrumentationLibrary {
    string name = 1;
    string version = 2;
}